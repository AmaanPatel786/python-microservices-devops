name: CI

on:
  push:
    branches: [ main ]
  pull_request:

env:
  REGISTRY: docker.io
  IMAGE_PREFIX: ${{ secrets.DOCKERHUB_USERNAME }}/python-microservices

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: pip install -r requirements.txt
      - run: pytest -q

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [backend, frontend, logger]
    steps:
      - uses: actions/checkout@v4
      - name: Set image name
        id: vars
        run: echo "name=${{ env.IMAGE_PREFIX }}-${{ matrix.service }}" >> $GITHUB_OUTPUT
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./${{ matrix.service }}
          push: true
          tags: |
            ${{ steps.vars.outputs.name }}:latest
            ${{ steps.vars.outputs.name }}:${{ github.sha }}
      - name: Notify on failure (Slack)
        if: failure()
        run: |
          if [ -n "${{ secrets.SLACK_WEBHOOK_URL }}" ]; then
            curl -X POST -H 'Content-type: application/json' --data "{"text":"Build failed for ${{ matrix.service }} on $GITHUB_REF"}" ${{ secrets.SLACK_WEBHOOK_URL }}
          fi
